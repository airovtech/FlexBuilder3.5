<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:ns1="smartWork.custormObj.*" creationComplete="init()" 
		horizontalScrollPolicy="off" xmlns:ns2="mxmlComponet.test.*" >
	<mx:Script>
		<![CDATA[
			import portalAs.gridComponent.FindSelectItem;
			import mx.managers.PopUpManager;
			import portalAs.Properties;
			import mx.collections.XMLListCollection;
			import mx.rpc.events.ResultEvent;
			import mxmlComponet.gadget.declaration.GadgetDeclaration;
			import mxmlComponet.test.testGaject;
			import smartWork.custormObj.GadgetPanel;
			import mx.events.DragEvent;
			import mx.containers.VBox;
			import mx.core.IUIComponent;
			import mx.managers.DragManager;
			import mxmlComponet.test.*;
			import mx.events.FlexEvent;
			import portalAs.Properties;
			
			private var format:String = "^";
			private var gadgetDeclaration:GadgetDeclaration;
			
			private function makeGadget(className:String, title:String, height:Number, arr:Array, columnsIds:String, formId:String):Canvas{
				var parentCanvas:Canvas = new Canvas();
				parentCanvas.addEventListener(FlexEvent.UPDATE_COMPLETE, updateCompleteHandler);
				parentCanvas.percentWidth = 100;
				parentCanvas.height = height;
				var gadgetPanel:GadgetPanel;
				var clazz:Class = Class(getDefinitionByName(className));
				gadgetPanel = GadgetPanel(new clazz());
				if(title!=null){
					gadgetPanel.title = title;
				}
				gadgetPanel.showControls = true;
				gadgetPanel.closeEnable = true;
				gadgetPanel.mainCanvas = this;
				gadgetPanel.layOutBox = true;
				gadgetPanel.insertEnable = true;
				gadgetPanel.columnsArr = arr;
				gadgetPanel.columnsIdArr = columnsIds;
				gadgetPanel.formId = formId;
				parentCanvas.addChild(gadgetPanel);
				return parentCanvas;
			}
			
			private function updateCompleteHandler(event:Event):void{
				gadgetSave();
        	}
			
			private function init():void{
				retrieveGadgetService.url = Properties.basePath + "action/PrivateGadgetInfoAction.do?mode=getGadget";
				retrieveGadgetService.send();
			}
			
			private function doDragEnter(event:DragEvent):void{
				if(event.dragSource.hasFormat(format)){
					DragManager.acceptDragDrop(IUIComponent(event.target));
				}
	        }
	        
	        private function doDragOver(event:DragEvent):void{
	        	if(this.mouseY+250 > this.height){
	        		this.verticalScrollPosition = this.verticalScrollPosition + 100;
	        	}else{
	        		this.verticalScrollPosition = this.verticalScrollPosition - 100;
	        	}
	        }
	        
	        private function doDragDrop(event:DragEvent):void{
	        	var targetVBox:VBox = VBox(event.target);
				var obj:Object=new Object();
				obj=event.dragSource.dataForFormat(format);
				var moveCanvas:Canvas = Canvas(obj);	
				var movePanel:GadgetPanel = GadgetPanel(moveCanvas.getChildAt(0));	
				try{
					moveCanvas.parent.removeChild(moveCanvas);
				}catch(err:Error){}
				targetVBox.addChildAt(moveCanvas, targetVBox.getChildren().length - 1);
	        }
	        
	        public function gadgetSave():void {
	        	gadgetInfoSum.text = "";
	        	try{
	        		for (var k:int = 0; k < hBox.numChildren; k++) { 
	        			var vBox:VBox = VBox(hBox.getChildAt(k));
	        			for (var i:int = 0; i < vBox.numChildren-1; i++) {
	        				gadgetInfoSum.text += vBox.id + "|";
							gadgetInfoSum.text += GadgetPanel(Canvas(vBox.getChildAt(i)).getChildAt(0)).title + "|"; 
							gadgetInfoSum.text += getQualifiedClassName(Canvas(vBox.getChildAt(i)).getChildAt(0))+ "|"; 
							gadgetInfoSum.text += GadgetPanel(Canvas(vBox.getChildAt(i)).getChildAt(0)).columnsIdArr + "|"; 
							gadgetInfoSum.text += GadgetPanel(Canvas(vBox.getChildAt(i)).getChildAt(0)).formId;
							gadgetInfoSum.text += "^";
	        			}
	        		}
					//ExternalInterface.call("extGagetTempSave", gadgetInfoSum.text);
					System.useCodePage = true;
					saveGadgetService.url = Properties.basePath + "action/PrivateGadgetInfoAction.do?mode=saveGadget";
					saveGadgetService.send();
					System.useCodePage = false;
	        	}catch(err:Error){}
			}
			
			private function initOnResult(event:ResultEvent):void  {
				var xmlResult:XML = XML(event.result);    
				try{
				  	var vboxnameList:XMLListCollection = new XMLListCollection(xmlResult.gadget.vboxname); 
					var titleList:XMLListCollection = new XMLListCollection(xmlResult.gadget.title);  
					var componetNameList:XMLListCollection = new XMLListCollection(xmlResult.gadget.componetName);
					var columnIdsList:XMLListCollection = new XMLListCollection(xmlResult.gadget.columnIds);
					var formIdList:XMLListCollection = new XMLListCollection(xmlResult.gadget.formId);
					var vboxname:String; 
					var title:String; 
					var componetName:String; 
					var columnIds:String; 
					var columnNames:String; 
					var formId:String; 
					for(var i:int=0; i<vboxnameList.length; i++){
						vboxname = String(vboxnameList.getItemAt(i));
						title = String(titleList.getItemAt(i));
						componetName = String(componetNameList.getItemAt(i));
						columnIds = String(columnIdsList.getItemAt(i));
						formId = String(formIdList.getItemAt(i));
						VBox(hBox.getChildByName(vboxname)).addChild(makeGadget(componetName, title, 250, null, columnIds, formId));
					}
					
					makeTempCanvas();
				}catch (err: Error) {}
			}
			
			private function makeTempCanvas():void{
				//빈Canvas생성.
					var tempCanvas1:Canvas = new Canvas();
					tempCanvas1.percentWidth = 100;
					tempCanvas1.height = 250;
					tempCanvas1.addEventListener(DragEvent.DRAG_OVER, doDragOver);
					vBox1.addChild(tempCanvas1);
					
					var tempCanvas2:Canvas = new Canvas();
					tempCanvas2.percentWidth = 100;
					tempCanvas2.height = 250;
					tempCanvas2.addEventListener(DragEvent.DRAG_OVER, doDragOver);
					vBox2.addChild(tempCanvas2);
					
					var tempCanvas3:Canvas = new Canvas();
					tempCanvas3.percentWidth = 100;
					tempCanvas3.height = 250;
					tempCanvas3.addEventListener(DragEvent.DRAG_OVER, doDragOver);
					vBox3.addChild(tempCanvas3);
			}
			
			private function gadgetSearchPop():void{
				var pop:GadgetGrid = GadgetGrid(PopUpManager.createPopUp(this, GadgetGrid, true));
				pop.showCloseButton = true;
				pop.owner = this;
				pop.x = 120;
				pop.y = 20;
			}
			
			public function newAddGadget(className:String, title:String, height:Number, columnArr:Array, formId:String):void{
				vBox1.removeChildAt(vBox1.numChildren-1);
				vBox2.removeChildAt(vBox2.numChildren-1);
				vBox3.removeChildAt(vBox3.numChildren-1);
				var mixVBox:VBox = vBox1;
				if(mixVBox.numChildren > vBox2.numChildren){
					mixVBox = vBox2;
				}else if(mixVBox.numChildren > vBox3.numChildren){
					mixVBox = vBox3;
				}
				VBox(hBox.getChildByName(mixVBox.id)).addChild(makeGadget(className, title, 250, columnArr, null, formId));
				makeTempCanvas();
			}
		]]>
	</mx:Script>
	<mx:HTTPService id="saveGadgetService"  resultFormat="e4x" useProxy="false" method="post">
		<mx:request>
			<!--<userId>{Properties.userId}</userId>-->
			<userId>{Properties.userId}</userId>
			<gadgetInfoSum>{gadgetInfoSum.text}</gadgetInfoSum>
		</mx:request>
	</mx:HTTPService>
	<mx:HTTPService id="retrieveGadgetService"  resultFormat="e4x" useProxy="false" result="initOnResult(event)" method="post">
		<mx:request>
			<!--<userId>{Properties.userId}</userId>-->
			<userId>{Properties.userId}</userId>
		</mx:request>
	</mx:HTTPService>
	
	<mx:VDividedBox width="100%" height="100%" verticalGap="0" verticalAlign="middle" horizontalAlign="center">
		<mx:HBox width="100%" height="17" verticalAlign="top" horizontalAlign="right" horizontalGap="0" paddingTop="0" paddingBottom="0">
			<mx:Canvas width="200" height="100%">
				<mx:Image width="16" height="16" source="@Embed('images/portal_main/main_content_gadget_add_icon.png')" click="gadgetSearchPop()" x="131.6" y="1"/>
				<mx:Label text="가젯추가" height="17" styleName="normalLabel" fontSize="12" click="gadgetSearchPop()" x="147" y="-2"/>
			</mx:Canvas>
		</mx:HBox> 
		<mx:HBox width="100%" height="100%" id="hBox" horizontalGap="4">
			<mx:VBox  height="100%" width="33.3%" dragEnter="doDragEnter(event)" dragDrop="doDragDrop(event)" dragOver="doDragOver(event)" 
				id="vBox1" verticalGap="4"  backgroundColor="#ffffff">
			</mx:VBox>
			<mx:VBox  height="100%" width="33.3%" dragEnter="doDragEnter(event)" dragDrop="doDragDrop(event)" dragOver="doDragOver(event)" 
				id="vBox2" verticalGap="4"  backgroundColor="#fffffe">
			</mx:VBox>
			<mx:VBox height="100%" width="33.4%" dragEnter="doDragEnter(event)" dragDrop="doDragDrop(event)" dragOver="doDragOver(event)" 
				id="vBox3" verticalGap="4"  backgroundColor="#fffffd">
			</mx:VBox>
		</mx:HBox>
	</mx:VDividedBox>
	<mx:TextInput x="4" y="4" width="0" height="0" enabled="true" id="gadgetInfoSum" visible="false"/>
</mx:Canvas>
