<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:smart="com.maninsoft.smart.workbench.process.*"
	creationComplete="doCreationComplete(event);" verticalScrollPolicy="off" horizontalScrollPolicy="off" backgroundColor="#ffffff">
	<mx:Style source="/assets/css/workbenchEditor.css"/>
	<mx:Script>
		<![CDATA[
			import com.maninsoft.smart.workbench.common.event.SelectActivityCallbackEvent;
			import mx.controls.Alert;
			import com.maninsoft.smart.workbench.process.DiagramViewer;
			import com.maninsoft.smart.workbench.common.event.LoadCallbackEvent;
			import com.maninsoft.smart.workbench.util.WorkbenchConfig;
	 		import com.maninsoft.smart.workbench.common.util.LocaleUtil;
	 		
			private function doCreationComplete(event: Event): void {
/*
           		Application.application.parameters.serviceUrl = "http://dev.smartworks.net/";
           		Application.application.parameters.defaultLanguage = "KOR";
           		Application.application.parameters.compId = "Maninsoft";
           		Application.application.parameters.userId = "ysjung@maninsoft.co.kr";
           		Application.application.parameters.processId = "prc_f035df10ce54469899a96633461b3190";
           		Application.application.parameters.version = "1";
*/
				for each(var locale:Object in LocaleUtil.locales){
					if(locale.lang == Application.application.parameters.defaultLanguage){
						LocaleUtil.locale = locale.loc;
						resourceManager.localeChain = [LocaleUtil.locale];
						break;
					}
				}

				diagramViewer.addEventListener(LoadCallbackEvent.LOAD_CALLBACK, loadCallbackHandler);
				diagramViewer.addEventListener(SelectActivityCallbackEvent.SELECT_ACTIVITY_CALLBACK, selectActivityCallbackHandler);
				diagramViewer.serviceUrl = Application.application.parameters.serviceUrl + "smartworksV3/services/builder/builderService.jsp";
				diagramViewer.builderServiceUrl = diagramViewer.serviceUrl;
				diagramViewer.compId = Application.application.parameters.compId;
				diagramViewer.userId = Application.application.parameters.userId;
				diagramViewer.processId = Application.application.parameters.processId; 
				diagramViewer.version = Application.application.parameters.version;
				diagramViewer.percentWidth = 100;
				diagramViewer.load();
			}
			
			public function loadCallbackHandler(event:LoadCallbackEvent):void{
				/**
			 	 * 	에디터의 세로사이즈를 가변으로 하기 위하여 에디터가 로드나 리로드 되고 나면 화면의 세로사이즈롤 호출한 웹에 전달하여,
			 	 * 	웹에서 화면 세로사이즈에 맞게 조정하도록 한다.
			 	 */
				this.height = event.contentHeight;
				WorkbenchConfig.contentHeight = event.contentHeight;
				diagramViewer.resetExtents();			
				ExternalInterface.call(LoadCallbackEvent.LOAD_CALLBACK, "DiagramViewer", WorkbenchConfig.contentHeight);
			}	

			public function selectActivityCallbackHandler(event: SelectActivityCallbackEvent):void{
				/**
				 * 	프로세스다이어그램에서, 태스크를 선택하면 웹화면에 전달하여 해당 태스크의 상세화면을  표시하게 한다.
				 *  파라미터는 taskId 이다. 
				 */
				ExternalInterface.call(SelectActivityCallbackEvent.SELECT_ACTIVITY_CALLBACK, event.taskId);
//Alert.show( "DiagramViewer selectActivityCallback function called !!!" + " taskId=" + event.taskId);
			}			

		]]>
	</mx:Script>
	<mx:Metadata>
        [ResourceBundle("CommonETC")]
        [ResourceBundle("WorkbenchMessages")]
        [ResourceBundle("WorkbenchETC")]
        [ResourceBundle("ProcessEditorMessages")]
        [ResourceBundle("ProcessEditorETC")]
        [ResourceBundle("FormEditorMessages")]
        [ResourceBundle("FormEditorETC")]
        [ResourceBundle("GanttChartMessages")]
        [ResourceBundle("GanttChartETC")]
    </mx:Metadata>

	<smart:DiagramViewer id="diagramViewer" verticalScrollPolicy="off" horizontalScrollPolicy="off"/>

</mx:Application>
